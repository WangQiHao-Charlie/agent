apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nodeactions.risc.dev
spec:
  group: risc.dev
  scope: Namespaced
  names:
    plural: nodeactions
    singular: nodeaction
    kind: NodeAction
    shortNames: [na]
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            required: ["nodeName","instructionRef"]
            properties:
              nodeName: { type: string }
              instructionRef:
                type: object
                required: ["name","instruction","runtime"]
                properties:
                  name: { type: string }         # InstructionSet 名
                  instruction: { type: string }  # 指令名
                  runtime: { type: string }      # runtime 名（如 firecracker / demo）
              resolvedSubjectID: { type: string }
              params:
                type: object
                additionalProperties: { type: string }
              executionID: { type: string }
              timeoutSeconds: { type: integer, format: int32, minimum: 0 }
          status:
            type: object
            properties:
              phase:
                type: string
                enum: ["Pending","Running","Succeeded","Failed"]
              startedAt: { type: string, format: date-time, nullable: true }
              finishedAt: { type: string, format: date-time, nullable: true }
              result:
                type: object
                properties:
                  artifacts:
                    type: array
                    items:
                      type: object
                      properties:
                        type: { type: string }
                        url: { type: string }
                  stdoutTail: { type: string }
                  stderrTail: { type: string }
              conditions:
                type: array
                items:
                  type: object
                  required: ["type","status"]
                  properties:
                    type: { type: string }
                    status: { type: string, enum: ["True","False","Unknown"] }
                    reason: { type: string }
                    lastTransitionTime: { type: string, format: date-time, nullable: true }
